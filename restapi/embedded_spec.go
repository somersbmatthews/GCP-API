// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is test server for GIRC app",
    "title": "GIRC App API",
    "version": "3.0.0"
  },
  "host": "girc.app",
  "basePath": "/",
  "paths": {
    "/v2/incident": {
      "get": {
        "description": "Use this to get all incidents created by a user. incidents are listed in array in order from newest to oldest created",
        "produces": [
          "application/json"
        ],
        "tags": [
          "incident"
        ],
        "summary": "Get incidents",
        "operationId": "getIncidents",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "contains user id",
            "name": "User",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetIncidentsGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "userid not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      },
      "post": {
        "description": "use this to create an incident for a userId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "incident"
        ],
        "summary": "Create an incident",
        "operationId": "createIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation, only returns token if not using OAuth",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            },
            "headers": {
              "Authentication": {
                "type": "string",
                "description": "token"
              }
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/CreateIncidentInvalidIncidentResponse"
            }
          },
          "404": {
            "description": "userId for this incident is not found",
            "schema": {
              "$ref": "#/definitions/CreateIncidentUserIdNotFoundResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "incident"
        ],
        "summary": "Delete incident",
        "operationId": "deleteIncidents",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncidents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v2/user": {
      "get": {
        "description": "Get a user's information.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Get user's information.",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetUserGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "user not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      },
      "post": {
        "description": "register a user with his information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "register a user",
        "operationId": "createUser",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "a user's information",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "400": {
            "description": "database error while creating user",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "unregisters a user, for testing only will be removed in production",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "authorization token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "user with requested userid not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/corincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Coroner Incident"
        ],
        "summary": "create coroner incident",
        "operationId": "createCorIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/dermincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Derm Incident"
        ],
        "summary": "create coroner incident",
        "operationId": "createDermIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/emtincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "EMT Incident"
        ],
        "summary": "create Emergency Medical Technician Incident",
        "operationId": "createEMTIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateENTIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/entincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ENT Incident"
        ],
        "summary": "create ENT Incident",
        "operationId": "createENTIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateENTIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/erpincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ERP Incident"
        ],
        "summary": "create create Emergency Room Physician incident",
        "operationId": "createERPIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/expert": {
      "get": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "getExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          }
        }
      },
      "post": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "registerExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "deleteExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "updateExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          }
        }
      }
    },
    "/v3/expert/login": {
      "get": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "login expert",
        "operationId": "loginExpert",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/expert/logout": {
      "get": {
        "description": "Use this tto login an expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "login expert",
        "operationId": "logoutExpert",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/fireincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Fire Incident"
        ],
        "operationId": "createFireIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/surgincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Surg Incident"
        ],
        "operationId": "createSurgIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/verify": {
      "patch": {
        "description": "verified field is true to verify, false to unverify",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "verify"
        ],
        "summary": "use this to verify or unverify a Medcal Expert, for testing only",
        "operationId": "verifyExpert",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "verified field is true to verify, false to unverify",
            "name": "verified",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Verify"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "userid not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/vetincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vet Incident"
        ],
        "operationId": "createVetIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BadResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CreateENTIncident": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Age": {
          "type": "integer"
        },
        "Anesthesia": {
          "type": "integer"
        },
        "Complications": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Country": {
          "type": "string"
        },
        "CustomComplications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomImaging": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomProcedures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomSymptoms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Date": {
          "type": "integer"
        },
        "Gender": {
          "type": "integer"
        },
        "ID": {
          "type": "string"
        },
        "Imaging": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Info": {
          "type": "string"
        },
        "Procedures": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Prognosis": {
          "type": "integer"
        },
        "RemovalSetting": {
          "type": "integer"
        },
        "SwallowedObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSwallowedObject"
          }
        },
        "SymptomSeverity": {
          "type": "integer"
        },
        "Symptoms": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "TimeUntilRemoval": {
          "type": "integer"
        }
      }
    },
    "CreateExpert": {
      "type": "object",
      "properties": {
        "Degree": {
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "Expertise": {
          "type": "number"
        },
        "Password": {
          "type": "string"
        },
        "Verified": {
          "type": "boolean"
        }
      }
    },
    "CreateIncidentGoodResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Anterior": {
          "type": "string"
        },
        "Approximate_Patient_Age": {
          "type": "string"
        },
        "Created": {
          "type": "boolean"
        },
        "Date_of_Incident": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Incident_Description": {
          "type": "string"
        },
        "Largest_Length": {
          "type": "string"
        },
        "Location_of_object": {
          "type": "string"
        },
        "Long-term_prognosis": {
          "type": "string"
        },
        "Object_Basic_Shape": {
          "type": "string"
        },
        "Object_Consistency": {
          "type": "string"
        },
        "The_object_is": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "What_material_is_the_object_made_of": {
          "type": "string"
        }
      }
    },
    "CreateIncidentInvalidIncidentResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Anterior": {
          "type": "string"
        },
        "Approximate_Patient_Age": {
          "type": "string"
        },
        "Created": {
          "type": "boolean",
          "default": false
        },
        "Date_of_Incident": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Incident_Description": {
          "type": "string"
        },
        "Largest_Length": {
          "type": "string"
        },
        "Location_of_object": {
          "type": "string"
        },
        "Long-term_prognosis": {
          "type": "string"
        },
        "Object_Basic_Shape": {
          "type": "string"
        },
        "Object_Consistency": {
          "type": "string"
        },
        "The_object_is": {
          "type": "string"
        },
        "What_material_is_the_object_made_of": {
          "type": "string"
        }
      }
    },
    "CreateIncidentUserIdNotFoundResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Anterior": {
          "type": "string"
        },
        "Approximate_Patient_Age": {
          "type": "string"
        },
        "Created": {
          "type": "boolean",
          "default": false
        },
        "Date_of_Incident": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Incident_Description": {
          "type": "string"
        },
        "Largest_Length": {
          "type": "string"
        },
        "Location_of_object": {
          "type": "string"
        },
        "Long-term_prognosis": {
          "type": "string"
        },
        "Object_Basic_Shape": {
          "type": "string"
        },
        "Object_Consistency": {
          "type": "string"
        },
        "The_object_is": {
          "type": "string"
        },
        "What_material_is_the_object_made_of": {
          "type": "string"
        }
      }
    },
    "CreateIncidents": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "incidents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Incident"
          }
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "CreateSwallowedObject": {
      "type": "object",
      "properties": {
        "AnteriorPhoto": {
          "type": "string"
        },
        "Consistency": {
          "type": "string"
        },
        "CustomMaterials": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomShape": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "IncidentID": {
          "type": "string"
        },
        "LaterialPhoto": {
          "type": "string"
        },
        "Location": {
          "type": "integer"
        },
        "LongestDepth": {
          "type": "number"
        },
        "LongestHeight": {
          "type": "number"
        },
        "LongestWidth": {
          "type": "number"
        },
        "Materials": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "PosteriorPhoto": {
          "type": "string"
        },
        "RemovalDifficulty": {
          "type": "integer"
        },
        "Shape": {
          "type": "integer"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "required": [
        "name",
        "email",
        "degree",
        "specialty"
      ],
      "properties": {
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        }
      }
    },
    "CreateUserBadResponse": {
      "type": "object",
      "required": [
        "created",
        "name",
        "email",
        "specialty",
        "degree"
      ],
      "properties": {
        "created": {
          "type": "boolean",
          "example": false
        },
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        }
      }
    },
    "CreateUserGoodResponse": {
      "type": "object",
      "required": [
        "userId",
        "created"
      ],
      "properties": {
        "created": {
          "type": "boolean"
        },
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "DeleteIncident": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "DeleteIncidentGoodResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Deleted": {
          "type": "boolean",
          "default": true
        },
        "ID": {
          "type": "string"
        }
      }
    },
    "DeleteIncidentIncidentIdNotFoundResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Deleted": {
          "type": "boolean",
          "default": true
        },
        "ID": {
          "type": "string"
        }
      }
    },
    "DeleteIncidents": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "string"
        }
      }
    },
    "DeleteUserBadResponse": {
      "type": "object",
      "required": [
        "userId",
        "deleted"
      ],
      "properties": {
        "deleted": {
          "type": "boolean",
          "example": false
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "DeleteUserGoodResponse": {
      "type": "object",
      "required": [
        "deleted"
      ],
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "GetExpertResponse": {
      "type": "object",
      "properties": {
        "Degree": {
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "Expertise": {
          "type": "number"
        },
        "ID": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Verified": {
          "type": "boolean"
        }
      }
    },
    "GetIncidentsBadRequestResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "GetIncidentsGoodResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "incidents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Incident"
          }
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "GetIncidentsUserIdNotFoundResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "GetUserBadResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "GetUserGoodResponse": {
      "type": "object",
      "required": [
        "userId",
        "verified",
        "name",
        "degree",
        "specialty",
        "email"
      ],
      "properties": {
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "GoodResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Incident": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "aceticAcid": {
          "type": "string"
        },
        "additionalImagingAndSurgery": {
          "type": "string"
        },
        "anesthesia": {
          "type": "string"
        },
        "anteriorPhoto": {
          "type": "string"
        },
        "batteryImprintCode": {
          "type": "string"
        },
        "batteryLocation": {
          "type": "string"
        },
        "complications": {
          "type": "string"
        },
        "customMagnetType": {
          "type": "string"
        },
        "dimensionality": {
          "type": "string"
        },
        "easeOfRemoval": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "honey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "incidentDescription": {
          "type": "string"
        },
        "incidentYear": {
          "type": "string"
        },
        "largestDepth": {
          "type": "string"
        },
        "largestLength": {
          "type": "string"
        },
        "largestWidth": {
          "type": "string"
        },
        "lateralPhoto": {
          "type": "string"
        },
        "lengthOfHospitalStay": {
          "type": "string"
        },
        "lifeThreatening": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locationOfObjects": {
          "type": "string"
        },
        "longTermPrognosis": {
          "type": "string"
        },
        "magnetType": {
          "type": "string"
        },
        "magneticPoleDirection": {
          "type": "string"
        },
        "numberOfObjects": {
          "type": "string"
        },
        "numberOfPieces": {
          "type": "string"
        },
        "objectBasicShape": {
          "type": "string"
        },
        "objectCharacteristics": {
          "type": "string"
        },
        "objectConsistency": {
          "type": "string"
        },
        "objectMaterial": {
          "type": "string"
        },
        "objectsIntact": {
          "type": "string"
        },
        "other": {
          "type": "string"
        },
        "otherShape": {
          "type": "string"
        },
        "patientAge": {
          "type": "string"
        },
        "posteriorPhoto": {
          "type": "string"
        },
        "removalStrategy": {
          "type": "string"
        },
        "settingOfRemoval": {
          "type": "string"
        },
        "sucralfate": {
          "type": "string"
        },
        "symptomSeverity": {
          "type": "string"
        },
        "symptomsPresent": {
          "type": "string"
        },
        "timeUntilRemoval": {
          "type": "string"
        },
        "xrayOpacity": {
          "type": "string"
        }
      }
    },
    "UpdateExpert": {
      "type": "object",
      "properties": {
        "Degree": {
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "Expertise": {
          "type": "number"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "Verify": {
      "type": "object",
      "required": [
        "verified"
      ],
      "properties": {
        "verified": {
          "type": "boolean"
        }
      }
    }
  },
  "tags": [
    {
      "description": "to create, update, and delete incidents using old app",
      "name": "incident"
    },
    {
      "description": "for user registration and authentication",
      "name": "user"
    },
    {
      "description": "only used for testing and will be removed in production",
      "name": "verify"
    },
    {
      "description": "for Medical Experts",
      "name": "Medical Expert"
    },
    {
      "description": "for Otolaryngology Incidents",
      "name": "ENT Incident"
    },
    {
      "description": "for Vet Incidents",
      "name": "Vet Incident"
    },
    {
      "description": "for Emergency Medical Technician Incidents",
      "name": "EMT Incident"
    },
    {
      "description": "for Coroner Incidents",
      "name": "Coroner Incident"
    },
    {
      "description": "for Dermatologist Incidents",
      "name": "Derm Incident"
    },
    {
      "description": "for Surgical Incidents",
      "name": "Surg Incident"
    },
    {
      "description": "for fire incidents",
      "name": "Fire Incident"
    },
    {
      "description": "for Emergency Room Physician incidents",
      "name": "ERP Incident"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is test server for GIRC app",
    "title": "GIRC App API",
    "version": "3.0.0"
  },
  "host": "girc.app",
  "basePath": "/",
  "paths": {
    "/v2/incident": {
      "get": {
        "description": "Use this to get all incidents created by a user. incidents are listed in array in order from newest to oldest created",
        "produces": [
          "application/json"
        ],
        "tags": [
          "incident"
        ],
        "summary": "Get incidents",
        "operationId": "getIncidents",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "contains user id",
            "name": "User",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetIncidentsGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "userid not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      },
      "post": {
        "description": "use this to create an incident for a userId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "incident"
        ],
        "summary": "Create an incident",
        "operationId": "createIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation, only returns token if not using OAuth",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            },
            "headers": {
              "Authentication": {
                "type": "string",
                "description": "token"
              }
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/CreateIncidentInvalidIncidentResponse"
            }
          },
          "404": {
            "description": "userId for this incident is not found",
            "schema": {
              "$ref": "#/definitions/CreateIncidentUserIdNotFoundResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "incident"
        ],
        "summary": "Delete incident",
        "operationId": "deleteIncidents",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncidents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v2/user": {
      "get": {
        "description": "Get a user's information.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Get user's information.",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetUserGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "user not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      },
      "post": {
        "description": "register a user with his information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "register a user",
        "operationId": "createUser",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "a user's information",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "400": {
            "description": "database error while creating user",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "unregisters a user, for testing only will be removed in production",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "authorization token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "user with requested userid not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/corincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Coroner Incident"
        ],
        "summary": "create coroner incident",
        "operationId": "createCorIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/dermincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Derm Incident"
        ],
        "summary": "create coroner incident",
        "operationId": "createDermIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/emtincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "EMT Incident"
        ],
        "summary": "create Emergency Medical Technician Incident",
        "operationId": "createEMTIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateENTIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/entincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ENT Incident"
        ],
        "summary": "create ENT Incident",
        "operationId": "createENTIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateENTIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/erpincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ERP Incident"
        ],
        "summary": "create create Emergency Room Physician incident",
        "operationId": "createERPIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/expert": {
      "get": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "getExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          }
        }
      },
      "post": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "registerExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "deleteExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Use this to register a expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "register expert",
        "operationId": "updateExpert",
        "parameters": [
          {
            "type": "string",
            "description": "if using google oauth, set that token here",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          }
        }
      }
    },
    "/v3/expert/login": {
      "get": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "login expert",
        "operationId": "loginExpert",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/expert/logout": {
      "get": {
        "description": "Use this tto login an expert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Medical Expert"
        ],
        "summary": "login expert",
        "operationId": "logoutExpert",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/fireincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Fire Incident"
        ],
        "operationId": "createFireIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/surgincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Surg Incident"
        ],
        "operationId": "createSurgIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/verify": {
      "patch": {
        "description": "verified field is true to verify, false to unverify",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "verify"
        ],
        "summary": "use this to verify or unverify a Medcal Expert, for testing only",
        "operationId": "verifyExpert",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "verified field is true to verify, false to unverify",
            "name": "verified",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Verify"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "userid not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    },
    "/v3/vetincident": {
      "post": {
        "description": "Use this to delete an incident by incidentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vet Incident"
        ],
        "operationId": "createVetIncident",
        "parameters": [
          {
            "type": "string",
            "description": "authorization header contains bearer token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "name": "incident",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIncident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeleteIncidentGoodResponse"
            }
          },
          "401": {
            "description": "bad authorization token",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          },
          "404": {
            "description": "incident not found",
            "schema": {
              "$ref": "#/definitions/BadResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BadResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CreateENTIncident": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Age": {
          "type": "integer"
        },
        "Anesthesia": {
          "type": "integer"
        },
        "Complications": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Country": {
          "type": "string"
        },
        "CustomComplications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomImaging": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomProcedures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomSymptoms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Date": {
          "type": "integer"
        },
        "Gender": {
          "type": "integer"
        },
        "ID": {
          "type": "string"
        },
        "Imaging": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Info": {
          "type": "string"
        },
        "Procedures": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "Prognosis": {
          "type": "integer"
        },
        "RemovalSetting": {
          "type": "integer"
        },
        "SwallowedObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSwallowedObject"
          }
        },
        "SymptomSeverity": {
          "type": "integer"
        },
        "Symptoms": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "TimeUntilRemoval": {
          "type": "integer"
        }
      }
    },
    "CreateExpert": {
      "type": "object",
      "properties": {
        "Degree": {
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "Expertise": {
          "type": "number"
        },
        "Password": {
          "type": "string"
        },
        "Verified": {
          "type": "boolean"
        }
      }
    },
    "CreateIncidentGoodResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Anterior": {
          "type": "string"
        },
        "Approximate_Patient_Age": {
          "type": "string"
        },
        "Created": {
          "type": "boolean"
        },
        "Date_of_Incident": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Incident_Description": {
          "type": "string"
        },
        "Largest_Length": {
          "type": "string"
        },
        "Location_of_object": {
          "type": "string"
        },
        "Long-term_prognosis": {
          "type": "string"
        },
        "Object_Basic_Shape": {
          "type": "string"
        },
        "Object_Consistency": {
          "type": "string"
        },
        "The_object_is": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "What_material_is_the_object_made_of": {
          "type": "string"
        }
      }
    },
    "CreateIncidentInvalidIncidentResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Anterior": {
          "type": "string"
        },
        "Approximate_Patient_Age": {
          "type": "string"
        },
        "Created": {
          "type": "boolean",
          "default": false
        },
        "Date_of_Incident": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Incident_Description": {
          "type": "string"
        },
        "Largest_Length": {
          "type": "string"
        },
        "Location_of_object": {
          "type": "string"
        },
        "Long-term_prognosis": {
          "type": "string"
        },
        "Object_Basic_Shape": {
          "type": "string"
        },
        "Object_Consistency": {
          "type": "string"
        },
        "The_object_is": {
          "type": "string"
        },
        "What_material_is_the_object_made_of": {
          "type": "string"
        }
      }
    },
    "CreateIncidentUserIdNotFoundResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Anterior": {
          "type": "string"
        },
        "Approximate_Patient_Age": {
          "type": "string"
        },
        "Created": {
          "type": "boolean",
          "default": false
        },
        "Date_of_Incident": {
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Incident_Description": {
          "type": "string"
        },
        "Largest_Length": {
          "type": "string"
        },
        "Location_of_object": {
          "type": "string"
        },
        "Long-term_prognosis": {
          "type": "string"
        },
        "Object_Basic_Shape": {
          "type": "string"
        },
        "Object_Consistency": {
          "type": "string"
        },
        "The_object_is": {
          "type": "string"
        },
        "What_material_is_the_object_made_of": {
          "type": "string"
        }
      }
    },
    "CreateIncidents": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "incidents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Incident"
          }
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "CreateSwallowedObject": {
      "type": "object",
      "properties": {
        "AnteriorPhoto": {
          "type": "string"
        },
        "Consistency": {
          "type": "string"
        },
        "CustomMaterials": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomShape": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "IncidentID": {
          "type": "string"
        },
        "LaterialPhoto": {
          "type": "string"
        },
        "Location": {
          "type": "integer"
        },
        "LongestDepth": {
          "type": "number"
        },
        "LongestHeight": {
          "type": "number"
        },
        "LongestWidth": {
          "type": "number"
        },
        "Materials": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "PosteriorPhoto": {
          "type": "string"
        },
        "RemovalDifficulty": {
          "type": "integer"
        },
        "Shape": {
          "type": "integer"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "required": [
        "name",
        "email",
        "degree",
        "specialty"
      ],
      "properties": {
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        }
      }
    },
    "CreateUserBadResponse": {
      "type": "object",
      "required": [
        "created",
        "name",
        "email",
        "specialty",
        "degree"
      ],
      "properties": {
        "created": {
          "type": "boolean",
          "example": false
        },
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        }
      }
    },
    "CreateUserGoodResponse": {
      "type": "object",
      "required": [
        "userId",
        "created"
      ],
      "properties": {
        "created": {
          "type": "boolean"
        },
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "DeleteIncident": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "DeleteIncidentGoodResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Deleted": {
          "type": "boolean",
          "default": true
        },
        "ID": {
          "type": "string"
        }
      }
    },
    "DeleteIncidentIncidentIdNotFoundResponse": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "Deleted": {
          "type": "boolean",
          "default": true
        },
        "ID": {
          "type": "string"
        }
      }
    },
    "DeleteIncidents": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "string"
        }
      }
    },
    "DeleteUserBadResponse": {
      "type": "object",
      "required": [
        "userId",
        "deleted"
      ],
      "properties": {
        "deleted": {
          "type": "boolean",
          "example": false
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "DeleteUserGoodResponse": {
      "type": "object",
      "required": [
        "deleted"
      ],
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "GetExpertResponse": {
      "type": "object",
      "properties": {
        "Degree": {
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "Expertise": {
          "type": "number"
        },
        "ID": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Verified": {
          "type": "boolean"
        }
      }
    },
    "GetIncidentsBadRequestResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "GetIncidentsGoodResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "incidents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Incident"
          }
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "GetIncidentsUserIdNotFoundResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "GetUserBadResponse": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "GetUserGoodResponse": {
      "type": "object",
      "required": [
        "userId",
        "verified",
        "name",
        "degree",
        "specialty",
        "email"
      ],
      "properties": {
        "degree": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "GoodResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Incident": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "aceticAcid": {
          "type": "string"
        },
        "additionalImagingAndSurgery": {
          "type": "string"
        },
        "anesthesia": {
          "type": "string"
        },
        "anteriorPhoto": {
          "type": "string"
        },
        "batteryImprintCode": {
          "type": "string"
        },
        "batteryLocation": {
          "type": "string"
        },
        "complications": {
          "type": "string"
        },
        "customMagnetType": {
          "type": "string"
        },
        "dimensionality": {
          "type": "string"
        },
        "easeOfRemoval": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "honey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "incidentDescription": {
          "type": "string"
        },
        "incidentYear": {
          "type": "string"
        },
        "largestDepth": {
          "type": "string"
        },
        "largestLength": {
          "type": "string"
        },
        "largestWidth": {
          "type": "string"
        },
        "lateralPhoto": {
          "type": "string"
        },
        "lengthOfHospitalStay": {
          "type": "string"
        },
        "lifeThreatening": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "locationOfObjects": {
          "type": "string"
        },
        "longTermPrognosis": {
          "type": "string"
        },
        "magnetType": {
          "type": "string"
        },
        "magneticPoleDirection": {
          "type": "string"
        },
        "numberOfObjects": {
          "type": "string"
        },
        "numberOfPieces": {
          "type": "string"
        },
        "objectBasicShape": {
          "type": "string"
        },
        "objectCharacteristics": {
          "type": "string"
        },
        "objectConsistency": {
          "type": "string"
        },
        "objectMaterial": {
          "type": "string"
        },
        "objectsIntact": {
          "type": "string"
        },
        "other": {
          "type": "string"
        },
        "otherShape": {
          "type": "string"
        },
        "patientAge": {
          "type": "string"
        },
        "posteriorPhoto": {
          "type": "string"
        },
        "removalStrategy": {
          "type": "string"
        },
        "settingOfRemoval": {
          "type": "string"
        },
        "sucralfate": {
          "type": "string"
        },
        "symptomSeverity": {
          "type": "string"
        },
        "symptomsPresent": {
          "type": "string"
        },
        "timeUntilRemoval": {
          "type": "string"
        },
        "xrayOpacity": {
          "type": "string"
        }
      }
    },
    "UpdateExpert": {
      "type": "object",
      "properties": {
        "Degree": {
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "Expertise": {
          "type": "number"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "Verify": {
      "type": "object",
      "required": [
        "verified"
      ],
      "properties": {
        "verified": {
          "type": "boolean"
        }
      }
    }
  },
  "tags": [
    {
      "description": "to create, update, and delete incidents using old app",
      "name": "incident"
    },
    {
      "description": "for user registration and authentication",
      "name": "user"
    },
    {
      "description": "only used for testing and will be removed in production",
      "name": "verify"
    },
    {
      "description": "for Medical Experts",
      "name": "Medical Expert"
    },
    {
      "description": "for Otolaryngology Incidents",
      "name": "ENT Incident"
    },
    {
      "description": "for Vet Incidents",
      "name": "Vet Incident"
    },
    {
      "description": "for Emergency Medical Technician Incidents",
      "name": "EMT Incident"
    },
    {
      "description": "for Coroner Incidents",
      "name": "Coroner Incident"
    },
    {
      "description": "for Dermatologist Incidents",
      "name": "Derm Incident"
    },
    {
      "description": "for Surgical Incidents",
      "name": "Surg Incident"
    },
    {
      "description": "for fire incidents",
      "name": "Fire Incident"
    },
    {
      "description": "for Emergency Room Physician incidents",
      "name": "ERP Incident"
    }
  ]
}`))
}
