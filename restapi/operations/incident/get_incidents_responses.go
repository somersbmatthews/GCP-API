// Code generated by go-swagger; DO NOT EDIT.

package incident

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/somersbmatthews/gircapp2/models"
)

// GetIncidentsOKCode is the HTTP code returned for type GetIncidentsOK
const GetIncidentsOKCode int = 200

/*GetIncidentsOK successful operation

swagger:response getIncidentsOK
*/
type GetIncidentsOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetIncidentsGoodResponse `json:"body,omitempty"`
}

// NewGetIncidentsOK creates GetIncidentsOK with default headers values
func NewGetIncidentsOK() *GetIncidentsOK {

	return &GetIncidentsOK{}
}

// WithPayload adds the payload to the get incidents o k response
func (o *GetIncidentsOK) WithPayload(payload *models.GetIncidentsGoodResponse) *GetIncidentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get incidents o k response
func (o *GetIncidentsOK) SetPayload(payload *models.GetIncidentsGoodResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIncidentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetIncidentsNotFoundCode is the HTTP code returned for type GetIncidentsNotFound
const GetIncidentsNotFoundCode int = 404

/*GetIncidentsNotFound userid not found

swagger:response getIncidentsNotFound
*/
type GetIncidentsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetIncidentsUserIDNotFoundResponse `json:"body,omitempty"`
}

// NewGetIncidentsNotFound creates GetIncidentsNotFound with default headers values
func NewGetIncidentsNotFound() *GetIncidentsNotFound {

	return &GetIncidentsNotFound{}
}

// WithPayload adds the payload to the get incidents not found response
func (o *GetIncidentsNotFound) WithPayload(payload *models.GetIncidentsUserIDNotFoundResponse) *GetIncidentsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get incidents not found response
func (o *GetIncidentsNotFound) SetPayload(payload *models.GetIncidentsUserIDNotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIncidentsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
