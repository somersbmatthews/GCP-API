// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gircapp/api/models"
)

// SendNotificationOKCode is the HTTP code returned for type SendNotificationOK
const SendNotificationOKCode int = 200

/*SendNotificationOK successful operation

swagger:response sendNotificationOK
*/
type SendNotificationOK struct {

	/*
	  In: Body
	*/
	Payload *models.GoodResponse `json:"body,omitempty"`
}

// NewSendNotificationOK creates SendNotificationOK with default headers values
func NewSendNotificationOK() *SendNotificationOK {

	return &SendNotificationOK{}
}

// WithPayload adds the payload to the send notification o k response
func (o *SendNotificationOK) WithPayload(payload *models.GoodResponse) *SendNotificationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send notification o k response
func (o *SendNotificationOK) SetPayload(payload *models.GoodResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendNotificationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SendNotificationUnauthorizedCode is the HTTP code returned for type SendNotificationUnauthorized
const SendNotificationUnauthorizedCode int = 401

/*SendNotificationUnauthorized bad authorization token

swagger:response sendNotificationUnauthorized
*/
type SendNotificationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.BadResponse `json:"body,omitempty"`
}

// NewSendNotificationUnauthorized creates SendNotificationUnauthorized with default headers values
func NewSendNotificationUnauthorized() *SendNotificationUnauthorized {

	return &SendNotificationUnauthorized{}
}

// WithPayload adds the payload to the send notification unauthorized response
func (o *SendNotificationUnauthorized) WithPayload(payload *models.BadResponse) *SendNotificationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send notification unauthorized response
func (o *SendNotificationUnauthorized) SetPayload(payload *models.BadResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendNotificationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SendNotificationNotFoundCode is the HTTP code returned for type SendNotificationNotFound
const SendNotificationNotFoundCode int = 404

/*SendNotificationNotFound incident not found

swagger:response sendNotificationNotFound
*/
type SendNotificationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BadResponse `json:"body,omitempty"`
}

// NewSendNotificationNotFound creates SendNotificationNotFound with default headers values
func NewSendNotificationNotFound() *SendNotificationNotFound {

	return &SendNotificationNotFound{}
}

// WithPayload adds the payload to the send notification not found response
func (o *SendNotificationNotFound) WithPayload(payload *models.BadResponse) *SendNotificationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the send notification not found response
func (o *SendNotificationNotFound) SetPayload(payload *models.BadResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SendNotificationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
