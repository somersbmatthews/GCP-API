// Code generated by go-swagger; DO NOT EDIT.

package medical_expert

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gircapp/api/models"
)

// LoginExpertOKCode is the HTTP code returned for type LoginExpertOK
const LoginExpertOKCode int = 200

/*LoginExpertOK successful operation

swagger:response loginExpertOK
*/
type LoginExpertOK struct {

	/*
	  In: Body
	*/
	Payload *models.DeleteIncidentGoodResponse `json:"body,omitempty"`
}

// NewLoginExpertOK creates LoginExpertOK with default headers values
func NewLoginExpertOK() *LoginExpertOK {

	return &LoginExpertOK{}
}

// WithPayload adds the payload to the login expert o k response
func (o *LoginExpertOK) WithPayload(payload *models.DeleteIncidentGoodResponse) *LoginExpertOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login expert o k response
func (o *LoginExpertOK) SetPayload(payload *models.DeleteIncidentGoodResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginExpertOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginExpertUnauthorizedCode is the HTTP code returned for type LoginExpertUnauthorized
const LoginExpertUnauthorizedCode int = 401

/*LoginExpertUnauthorized bad authorization token

swagger:response loginExpertUnauthorized
*/
type LoginExpertUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.UpdateIncidentIncidentIDNotFoundResponse `json:"body,omitempty"`
}

// NewLoginExpertUnauthorized creates LoginExpertUnauthorized with default headers values
func NewLoginExpertUnauthorized() *LoginExpertUnauthorized {

	return &LoginExpertUnauthorized{}
}

// WithPayload adds the payload to the login expert unauthorized response
func (o *LoginExpertUnauthorized) WithPayload(payload *models.UpdateIncidentIncidentIDNotFoundResponse) *LoginExpertUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login expert unauthorized response
func (o *LoginExpertUnauthorized) SetPayload(payload *models.UpdateIncidentIncidentIDNotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginExpertUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginExpertNotFoundCode is the HTTP code returned for type LoginExpertNotFound
const LoginExpertNotFoundCode int = 404

/*LoginExpertNotFound incident not found

swagger:response loginExpertNotFound
*/
type LoginExpertNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.DeleteIncidentIncidentIDNotFoundResponse `json:"body,omitempty"`
}

// NewLoginExpertNotFound creates LoginExpertNotFound with default headers values
func NewLoginExpertNotFound() *LoginExpertNotFound {

	return &LoginExpertNotFound{}
}

// WithPayload adds the payload to the login expert not found response
func (o *LoginExpertNotFound) WithPayload(payload *models.DeleteIncidentIncidentIDNotFoundResponse) *LoginExpertNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login expert not found response
func (o *LoginExpertNotFound) SetPayload(payload *models.DeleteIncidentIncidentIDNotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginExpertNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
