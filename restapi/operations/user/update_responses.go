// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/somersbmatthews/gircapp2/models"
)

// UpdateOKCode is the HTTP code returned for type UpdateOK
const UpdateOKCode int = 200

/*UpdateOK successful operation

swagger:response updateOK
*/
type UpdateOK struct {

	/*
	  In: Body
	*/
	Payload *models.UpdateUserGoodResponse `json:"body,omitempty"`
}

// NewUpdateOK creates UpdateOK with default headers values
func NewUpdateOK() *UpdateOK {

	return &UpdateOK{}
}

// WithPayload adds the payload to the update o k response
func (o *UpdateOK) WithPayload(payload *models.UpdateUserGoodResponse) *UpdateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update o k response
func (o *UpdateOK) SetPayload(payload *models.UpdateUserGoodResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateBadRequestCode is the HTTP code returned for type UpdateBadRequest
const UpdateBadRequestCode int = 400

/*UpdateBadRequest Invalid user supplied

swagger:response updateBadRequest
*/
type UpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.UpdateUserInvalidResponse `json:"body,omitempty"`
}

// NewUpdateBadRequest creates UpdateBadRequest with default headers values
func NewUpdateBadRequest() *UpdateBadRequest {

	return &UpdateBadRequest{}
}

// WithPayload adds the payload to the update bad request response
func (o *UpdateBadRequest) WithPayload(payload *models.UpdateUserInvalidResponse) *UpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update bad request response
func (o *UpdateBadRequest) SetPayload(payload *models.UpdateUserInvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateNotFoundCode is the HTTP code returned for type UpdateNotFound
const UpdateNotFoundCode int = 404

/*UpdateNotFound User not found

swagger:response updateNotFound
*/
type UpdateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.UpdateUserNotFoundResponse `json:"body,omitempty"`
}

// NewUpdateNotFound creates UpdateNotFound with default headers values
func NewUpdateNotFound() *UpdateNotFound {

	return &UpdateNotFound{}
}

// WithPayload adds the payload to the update not found response
func (o *UpdateNotFound) WithPayload(payload *models.UpdateUserNotFoundResponse) *UpdateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update not found response
func (o *UpdateNotFound) SetPayload(payload *models.UpdateUserNotFoundResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
